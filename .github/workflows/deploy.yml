name: Build and Deploy .NET Framework 4.7 Application


on:
  push:
    branches: [ main ]
  pull_request:

env:
  applicationfolder: dotnet_legacy-master
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-1644x54in5q6g
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'


jobs:
  build:
    name: Build and Package
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository
      
            

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
       
      - name: Restore NuGet Packages
        run: nuget restore dotnet_legacy-master/WebApplication3.sln

      - name: Build and Package .NET Framework
        id: package
        working-directory: ${{ env.applicationfolder }}
        run : msbuild /p:Configuration=Release --no-restore
        #run: msbuild WebApplication3.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=Fold
      
      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}
        run: aws s3 cp .\WebApplication3\bin\ s3://${{ env.S3BUCKET }}/ --recursive
      
      # - name: Upload Artifact to S3
      #   run: aws s3 cp D:\a\legacy.net\legacy.net\dotnet_legacy-master\WebApplication3\bin s3://${{ env.S3BUCKET }}/ --recursive
        

      # - name: Upload Artifact to S3
      #   run: aws s3 cp ${{ env.applicationfolder }}/bin/Release/ s3://${{ env.S3BUCKET }}/ --recursive
      #   # working-directory: ${{ env.applicationfolder }}
      #   # run: aws s3 cp . s3://${{ env.S3BUCKET }}/
      
       
        #run: msbuild webapplication3.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile /p:PublishProfileRootFolder="C:\Users\Administrator\source\repos\WebApplication3\WebApplication3\Properties\PublishProfiles\" 
      
      # - name: Install zip
      #   uses: montudor/action-zip@v1  
      
      # - name: Zip output
      #   working-directory: ${{ env.applicationfolder }}
      #   run: zip -qq -r dotnet_legacy-master.zip bin/release/
      
      
      # - name: Upload Artifact to s3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read --follow-symlinks --exclude '*' --include 'dotnet_legacy-master.zip' 
      
      #  # working-directory: ${{ env.applicationfolder }}/bin/Release
      #   run: aws s3 cp *.exe s3://${{ env.S3BUCKET }}/


  deploy:
    needs: build
    runs-on: windows-latest
    #environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
