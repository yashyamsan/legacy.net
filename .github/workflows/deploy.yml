name: Build and Deploy .NET Framework 4.7 Application


on:
  push:
    branches: [ main ]
  pull_request:

env:
  applicationfolder: dotnet_legacy-master
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-1644x54in5q6g
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'


jobs:
  build:
    name: Build and Package
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository
      
            

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
       
      - name: Restore NuGet Packages
        run: nuget restore dotnet_legacy-master/WebApplication3.sln

      - name: Build and Package .NET Framework
        
        working-directory: ${{ env.applicationfolder }}
        # run : msbuild /p:Configuration=Release
        run: msbuild webapplication3.sln /p:Configuration=Release /p:DeployOnBuild=True /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:publishUrl=\bin\Release\Publish
      
  
      
      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}
        run: aws s3 cp .\WebApplication3\bin\Release\Publish s3://${{ env.S3BUCKET }}/deployment/ --recursive
      
      
    


  deploy:
    needs: build
    runs-on: windows-latest
    #environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
